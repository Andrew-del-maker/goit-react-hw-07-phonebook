{"version":3,"sources":["redux/phonebook/phonebook-action.js","redux/phonebook/phonebook-operation.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","reportWebVitals.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","Form","dispatch","useDispatch","useState","name","setName","number","setNumber","nameInputId","shortid","generate","numInputId","handleInputChange","e","currentTarget","value","reset","onSubmit","preventDefault","contact","id","actions","post","then","data","catch","error","addContact","htmlFor","type","pattern","title","required","onChange","Filter","useSelector","state","contacts","filter","target","ContactList","useEffect","get","visibleContacts","normalizeFilter","toLowerCase","includes","getVisibleContacts","map","onClick","delete","deleteContact","connect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","payload","action","loading","combineReducers","rootReducer","phonebookReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cf9ee68.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\"\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nconst changeFilter = createAction('contact/find');\n\nexport { changeFilter };","import axios from \"axios\";\nimport shortid from \"shortid\"\nimport * as actions from './phonebook-action'\n\naxios.defaults.baseURL = 'http://localhost:4040'\n\n\nexport const fetchContacts = () => dispatch => {\n    axios.get('/contacts').then(({ data }) => dispatch(actions.fetchContactSuccess(data))).catch(error=>actions.addContactError(error))\n}\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = { name, number, id: shortid.generate() };\n  dispatch(actions.addContactRequest());\n  axios.post('/contacts', contact)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch(error => dispatch(actions.addContactError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n    dispatch(actions.deleteContactRequest());\n\n    axios.delete(`/contacts/${id}`)\n        .then(() => dispatch(actions.deleteContactSuccess(id)))\n        .catch(error => dispatch(actions.deleteContactError(error)));\n\n}\n","import { useDispatch } from 'react-redux';\nimport './Form.css';\nimport {  useState } from \"react\";\nimport shortid from \"shortid\";\nimport {addContact} from '../../redux/phonebook/phonebook-operation'\n\nfunction Form() {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    \n    const nameInputId = shortid.generate();\n    const numInputId = shortid.generate();\n\n    const handleInputChange = (e) => {\n        const { value, name } = e.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value)\n                break\n            case 'number':\n                setNumber(value)\n                break\n            default: return\n        }\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(addContact(name,number));\n        reset();\n    }\n    const reset = () => {\n        setNumber('');\n        setName('');\n    }\n    \n    \n        return (\n            <form onSubmit={handleSubmit}>\n          <label htmlFor={nameInputId}>Name</label>\n          <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value= {name}\n          id= {nameInputId}\n          required\n          onChange={handleInputChange}\n          />\n          <br/>\n          <br/>\n          <label htmlFor={numInputId}>Number</label>\n          <input\n            type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          value= {number}\n          id ={numInputId}\n          required\n          onChange={handleInputChange}\n          />\n          <br/>\n          <br/>\n          <button type=\"submit\" >Add contact</button>\n        </form>\n        );\n    \n\n}\n\n\nexport default Form;","import { useDispatch, useSelector } from 'react-redux';\nimport {changeFilter} from '../../redux/phonebook/phonebook-action'\n\nconst Filter = () => {\n    const value = useSelector(state => state.contacts.filter);\n    const dispatch = useDispatch();\n\n\n    return(\n    <label>\n        <br />\n          Find contacts by name <br /><br /> \n          <input type='text' value={value} onChange={(e)=>dispatch(changeFilter(e.target.value))}></input>\n    </label>\n)};\n\n\nexport default Filter;","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../../redux/phonebook/phonebook-operation';\nimport {useEffect} from 'react'\n\nconst ContactList = () => {\n  const filter = useSelector(state => state.contacts.filter);\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  const dispatch = useDispatch();\n\n useEffect(() => {dispatch(fetchContacts())}, [dispatch])\n\n  \n  const getVisibleContacts = (filter, contacts) => {\n    \n    \n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n      );\n  }\n  \n  const visibleContacts = getVisibleContacts(filter, contacts);\n\n  return(\n    <ul>\n          {visibleContacts.map(({name,id,number}) =>\n              <li key={id}>{name} {number}\n                  <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>Delete</button>\n              </li>\n            )}\n    </ul>\n)}\n \n\nexport default ContactList;","import './App.css';\nimport Form from \"./Components/Form\";\nimport Filter from \"./Components/Filter\";\nimport ContactList from \"./Components/ContactList\";\nimport { connect } from \"react-redux\";\n\nfunction App() {\n  return (\n      <div>\n        <h1>Phonebook</h1>\n        <Form />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    )\n  }\nexport default connect()(App)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, fetchContactRequest, fetchContactSuccess, fetchContactError} from './phonebook-action';\n\n\n\n\nconst contacts = createReducer([], {\n    [fetchContactSuccess]: (_, {payload})=>payload,\n    [addContactSuccess]: (state, action) => [...state, action.payload],\n    [deleteContactSuccess]: (state, action) => state.filter(({ id }) => id !== action.payload),\n})\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, {payload}) => payload,\n} )\n\nconst loading = createReducer(false, {\n    [addContactRequest]: ()=>true,\n    [addContactSuccess]: ()=>false,\n    [addContactError]: ()=>false,\n    [deleteContactRequest]: ()=>true,\n    [deleteContactSuccess]: ()=>false,\n    [deleteContactError]: ()=>false,\n    [fetchContactRequest]: ()=>true,\n    [fetchContactSuccess]: ()=>false,\n    [fetchContactError]: ()=>false\n})\n\nexport default combineReducers({\n    contacts,\n    filter,\n    loading\n});","import phonebookReducer from './phonebook/phonebook-reducer';\nimport { configureStore, combineReducers, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE } from 'redux-persist/es/constants';\n\n\n\nconst rootReducer = combineReducers({ contacts: phonebookReducer });\n\n\nconst store = configureStore({\n    reducer: rootReducer,\n    devTools: process.env.NODE_ENV === 'development',\n    middleware: getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions:[FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n        }\n    })\n})\n\n\nexport  {store };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {  store } from './redux/store'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}